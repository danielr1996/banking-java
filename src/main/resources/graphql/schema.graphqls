scalar Date

type Query {
  buchungById(id: ID ): BuchungDTO
  buchungen(kontoIds: [ID], page: Int, size: Int): BuchungContainer
  saldo(kontoIds: [ID]): Saldo
  saldi(kontoIds: [ID], page: Int, size: Int): SaldiContainer
  konto(userId: String): [KontoDTO]
  signIn(user: UserInput): String
  # FIXME: Remove rpcId
  refresh(username: String, rpcId: String): String
}

type Mutation {
  createUser(user: UserInput): User
  createKonto(konto: KontoInput): KontoDTO
}

type User {
  name: String
}
input UserInput {
  name: String
  password: String
}

type BuchungContainer{
  buchungen: [BuchungDTO],
  totalPages: Int,
  totalElements: Int
}

type SaldiContainer{
  saldi: [Saldo],
  totalPages: Int,
  totalElements: Int
}

type BuchungDTO{
  id: ID
  kontoId: ID
  konto: KontoDTO
  betrag: Float
  waehrung: String
  buchungstext: String
  verwendungszweck: String
  selfPartner: Transaktionspartner
  otherPartner: Transaktionspartner
  buchungstag: Date
  valutadatum: Date
  kategorie: String
}

type Transaktionspartner{
  iban: String
  bic: String
  blz: String
  name: String
}

type Saldo{
  id: ID
  betrag: Float
  datum: Date
  ownerId: ID
}

type KontoDTO{
  id: ID
  blz: String
  kontonummer: String
  tanmedia: String
  secmech: String
}
input KontoInput{
  blz: String
  bic: String
  kontonummer: String
  tanmedia: String
  secmech: String
  password: String
}
