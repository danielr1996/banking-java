scalar Date

type Query {
  buchungById(id: ID ): Buchung
  buchungen(page: Int, size: Int): BuchungContainer
  saldo: Saldo
  saldi(page: Int, size: Int): SaldiContainer
}

type Mutation {
  createUser(user: UserInput): User
  signIn(user: UserInput): String
  refresh(dummy: String): String
}

type User {
  id: ID!
  name: String
}
input UserInput {
  name: String
  password: String
}

type BuchungContainer{
  buchungen: [Buchung],
  totalPages: Int,
  totalElements: Int
}

type SaldiContainer{
  saldi: [Saldo],
  totalPages: Int,
  totalElements: Int
}

type Buchung{
  id: ID
  ownerId: ID
  betrag: Float
  waehrung: String
  buchungstext: String
  verwendungszweck: String
  selfPartner: Transaktionspartner
  otherPartner: Transaktionspartner
  buchungstag: Date
  valutadatum: Date
  kategorie: String
}

type Transaktionspartner{
  iban: String
  bic: String
  blz: String
  name: String
}

type Saldo{
  id: ID
  betrag: Float
  datum: Date
  ownerId: ID
}
